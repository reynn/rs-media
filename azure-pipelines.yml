trigger:
  branches:
    include: ["*"]
  tags:
    include: ["*"]

resources:
  repositories:
    - repository: rust_pipelines
      type: github
      name: xoac/rust-azure-pipelines
      # ref: refs/tags/v0.1.0-alpha.2
      ref: refs/heads/master
      endpoint: github-reynn

stages:
  - stage: check
    displayName: "Quick checks"
    jobs:
      - template: ci/scenarios/check.yml@rust_pipelines
        parameters: # You can make conditions here.
          cargo-check: true
          cargo-check-nigtly: true # this can fail and stage check still succeed
          cargo-clippy: true
          rustfmt: true

  - stage: test
    displayName: "Multi OS native tests"
    jobs:
      - template: ci/scenarios/test.yml@rust_pipelines
        parameters:
          min_rust_supported: 1.37.0

  # This stage allow to easy test your crate using cross project.
  # Supported targets: https://github.com/rust-embedded/cross#supported-targets
  - stage: embedded
    displayName: "Cross check and tests"
    dependsOn:
      - check
    jobs:
      - template: ci/scenarios/embeeded.yml@rust_pipelines
        parameters:
          checks:
            - target: x86_64-pc-windows-gnu
              name: cross_check_windows_64
            - target: x86_64-unknown-linux-gnu
              name: cross_check_linux_gnu_64
            - target: x86_64-unknown-linux-musl
              name: cross_check_linux_musl_64
          tests:
            - target: x86_64-pc-windows-gnu
              name: cross_test_windows_64
            - target: x86_64-unknown-linux-gnu
              name: cross_test_linux_gnu_64
            - target: x86_64-unknown-linux-musl
              name: cross_test_linux_musl_64

  # This stage build binaries - you can deploy them in next stage
  - stage: build
    displayName: "Builds"
    condition: and(succeeded())
    dependsOn:
      - embedded
      - test
    jobs:
      - template: ci/scenarios/builds.yml@rust_pipelines
        parameters:
          artifactName: target
